name: "Rust crypto-dev environment"
description: "A GitHub Action that makes setting up crypto-related workflow environments easy"
author: "Thomas Braun <thomas.braun@avarok.net>"

runs:
  using: "composite"
  steps:
    - name: Install LLVM and Clang
      if: startsWith(runner.os, 'windows')
      uses: KyleMayes/install-llvm-action@v1.5.1
      with:
        version: "13.0"
        directory: ${{ runner.temp }}/llvm

    - name: Setup windows environment
      if: startsWith(runner.os, 'windows')
      run: |
        # Setup strong crypto
        Set-ItemProperty -Path "HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\.NetFramework\\v4.0.30319" -Name 'SchUseStrongCrypto' -Value '1' -Type DWord
        Set-ItemProperty -Path "HKLM:\\SOFTWARE\\Microsoft\\.NetFramework\\v4.0.30319" -Name "SchUseStrongCrypto" -Value '1' -Type DWord
        Invoke-WebRequest -OutFile "test\\astyle.exe" "https://rded.nl/pqclean/AStyle.exe"

    - name: Set LIBCLANG_PATH
      if: startsWith(runner.os, 'windows')
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      shell: cmd

    - name: Install OpenSSL
      if: startsWith(runner.os, 'windows')
      run: choco install openssl --limit-output
      shell: cmd

    - name: Set OPENSSL_ROOT_DIR
      if: startsWith(runner.os, 'windows')
      run: echo "OPENSSL_ROOT_DIR=C:/Program Files/OpenSSL-Win64" >> $env:GITHUB_ENV
      shell: cmd

    - name: Set OPENSSL_ROOT_DIR
      if: startsWith(runner.os, 'macos')
      run: echo "OPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1" >> $GITHUB_ENV
      shell: bash

    - uses: taiki-e/install-action@nextest
    - uses: actions/checkout@v2
    - uses: dtolnay/rust-toolchain@stable

